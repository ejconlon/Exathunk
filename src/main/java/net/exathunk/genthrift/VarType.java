/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package net.exathunk.genthrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * An underlying data type of a singleton variable
 */
public enum VarType implements org.apache.thrift.TEnum {
  VOID(0),
  BOOL(1),
  BYTE(2),
  I16(3),
  I32(4),
  I64(5),
  DOUBLE(6),
  STRING(7);

  private final int value;

  private VarType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static VarType findByValue(int value) { 
    switch (value) {
      case 0:
        return VOID;
      case 1:
        return BOOL;
      case 2:
        return BYTE;
      case 3:
        return I16;
      case 4:
        return I32;
      case 5:
        return I64;
      case 6:
        return DOUBLE;
      case 7:
        return STRING;
      default:
        return null;
    }
  }
}
